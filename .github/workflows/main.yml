# This is a basic automation workflow to help you get started with GitHub Actions.

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push for main and dev branch
  push:
    branches:
      # Set your base branch name here
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DEPLOYMENT_TARGET_URL: ${{ secrets.DEPLOYMENT_TARGET_URL }}
      DEPLOYMENT_TARGET_TOKEN: ${{ secrets.DEPLOYMENT_TARGET_TOKEN }}
      REPO_PATH: /Workspace/Users/akash.s@databricks.com/databricks-workspace-builder

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
      # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: 3.8

    - name: Install mods
      run: |
        pip install databricks-cli
        pip install pytest setuptools wheel

    - name: Configure CLI
      run: |
        echo "${{env.DEPLOYMENT_TARGET_URL}} ${{env.DEPLOYMENT_TARGET_TOKEN}}" | databricks configure --token

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Update Databricks Git folder
      run: |
        databricks repos update --path ${{env.REPO_PATH}} --branch "${{ steps.extract_branch.outputs.branch }}"
